name: CI & Release for Citizens Registry

on:
  push:
    branches:
      - develop

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and Run All Tests (unit + integration)
        run: mvn clean verify
        working-directory: citizen-registry

      - name: Upload Unit Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: citizen-registry/service/target/surefire-reports/

      - name: Upload Integration Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: failsafe-reports
          path: citizen-registry/integration-tests/target/failsafe-reports/

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JARs (skip tests)
        run: mvn clean package -DskipTests
        working-directory: citizen-registry

      - name: Find JAR file
        id: find_jar
        run: |
          JAR=$(find citizen-registry/service/target -name "*.jar" | head -n 1)
          echo "JAR_PATH=$JAR" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: dev-${{ github.run_number }}
          release_name: "Release #${{ github.run_number }} from develop"
          body: "Automated release from commit ${{ github.sha }}"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload service JAR
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: service.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
